YAML CloudFormation template with NGINX USER DATA
======================================================================================================================================
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template to create EC2 instance with NGINX.

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-12345678  # Replace with your desired Amazon Linux AMI
      KeyName: my-key-pair   # Replace with your desired KEY-PAIR
      SecurityGroupIds:
        - !Ref MySecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install nginx1.12 -y
          service nginx start
          chkconfig nginx on

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for EC2 Instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt MyInstance.PublicIp

Remember to replace the placeholder values like ami-12345678 with the appropriate Amazon Machine Image (AMI) ID and update the KeyName to your existing SSH key pair.

======================================================================================================================================

In this template:

The user data script is updated to install NGINX and start the NGINX service.
The amazon-linux-extras install nginx1.12 -y command installs NGINX using the Amazon Linux Extra Packages.
The service nginx start command starts the NGINX service, and chkconfig nginx on ensures that NGINX starts on system boot.
